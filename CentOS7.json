{
  "variables": {
    "comp": "atos",
    "os": "centos",
    "os_version": "7",
    "ssh_user": "centos",
    "ssh_pass": ""
  },

  "builders": [{
    "type": "amazon-ebs",

    "access_key": "{{user `aws_access_key`}}",
    "ami_name": "{{user `comp`}}-{{user `os`}} {{user `os_version`}}-{{timestamp}}",
    "instance_type": "t2.micro",
    "region": "us-east-1",
    "secret_key": "{{user `aws_secret_key`}}",
    "source_ami": "{{user `aws-ami`}}",
    "ssh_username": "{{user `ssh_user`}}",
    "ami_description": "This is a certified Atos cloud image for {{user `os`}} {{user `os_version`}}",
    "tags": {
        "Based on ami id": "{{.SourceAMI}}",
        "Produced by": "Atos SE",
        "OS Type": "{{user `os`}}",
        "OS Version": "{{user `os_version`}}",
        "Processor Arch.": "amd64",
        "Jenkins build number": "{{user `jenkins-build-no`}}",
        "Jenkins build URL": "{{user `jenkins-build-url`}}",
        "Git Commit": "{{user `git-commit`}}",
        "Git URL": "{{user `git-url`}}"
        }
    },
    {
      "type": "googlecompute",
      "project_id": "packer-197811",
      "account_file": "account.json",
      "source_image_family": "centos-7",
      "ssh_username": "packer",
      "zone": "europe-west2-a",
      "image_name": "{{user `comp`}}-{{user `os`}} {{user `os_version`}}-{{timestamp}}",
      "image_description": "This is a certified Atos cloud image for {{user `os`}} {{user `os_version`}}",
      "image_family": "{{user `comp`}} {{user `os`}}"
    },
    {
    "type": "azure-arm",

    "client_id": "{{user `az_client_id`}}",
    "client_secret": "{{user `az_client_secret`}}",
    "resource_group_name": "packer",
    "storage_account": "packerstorageatos",
    "subscription_id": "{{user `az_sub_id`}}",
    "tenant_id": "{{user `az_ten_id`}}",
    "object_id": "{{user `az_obj_id`}}",
    "capture_container_name": "images",
    "capture_name_prefix": "packer",
    "ssh_username": "{{user `ssh_user`}}",
    "ssh_password": "{{user `ssh_pass`}}",

    "os_type": "Linux",
    "image_publisher": "OpenLogic",
    "image_offer": "CentOS",
    "image_sku": "7.3",
    "image_version": "latest",
    "ssh_pty": "true",

    "azure_tags": {
        "Produced by": "Atos SE",
        "OS Type": "{{user `os`}}",
        "OS Version": "{{user `os_version`}}",
        "Processor Arch.": "amd64",
        "Jenkins build number": "{{user `jenkins-build-no`}}",
        "Jenkins build URL": "{{user `jenkins-build-url`}}",
        "Git Commit": "{{user `git-commit`}}",
        "Git URL": "{{user `git-url`}}"
        },

    "location": "UK South",
    "vm_size": "Standard_A2"
    },
    {
    "type": "vsphere",

    "vcenter_server": "{{user `vc`}}",
    "username": "{{user `vc_user`}}",
    "password": "{{user `vsphere_pass`}}",
    "insecure_connection": true,
    "datacenter": "AtosRemoteLab",

    "template": "inno/CentOS-Template",
    "vm_name": "{{user `comp`}}-{{user `os`}} {{user `os_version`}}-{{timestamp}}",
    "folder": "inno",
    "host": "{{user `vc_host`}}",
    "resource_pool": "",
    "datastore": "LocalLUN",
    "linked_clone": false,

    "CPUs": 2,
    "CPU_reservation": 1000,
    "CPU_limit": 2000,
    "RAM": 8192,
    "RAM_reservation": 2048,

    "ssh_username": "root",
    "ssh_password": "{{user `guest_password`}}",

    "shutdown_command": "echo '{{user `guest_password`}}' | sudo -S shutdown -P now",
    "shutdown_timeout": "5m",
    "create_snapshot": true,
    "convert_to_template": true
  }],

  "provisioners": [{
    "type": "shell",
    "inline": [
        "sleep 30",
        "sudo yum update -y",
        "sudo yum install git -y",
        "sudo yum install epel-release -y",
        "sudo yum install ansible -y",
        "sudo ansible-galaxy install dev-sec.os-hardening -p /usr/share/ansible/roles/"
    ]
    },
    {
    "type": "ansible-local",
    "playbook_file": "playbook.yml",
    "playbook_dir": "/var/lib/jenkins/workspace/",
    "staging_directory": "/tmp/accosia",
    "command": "ansible-playbook"
    },
    {

    "type": "shell",
    "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E sh '{{ .Path }}'",
    "inline": [
       "/usr/sbin/waagent -force -deprovision+user && export HISTSIZE=0 && sync"
    ],
    "inline_shebang": "/bin/sh -x",
    "skip_clean": true,
    "only": ["azure-arm"]
  }]
}